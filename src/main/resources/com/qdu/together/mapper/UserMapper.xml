<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.qdu.together.mapper.UserMapper" >
  <resultMap id="BaseResultMap" type="com.qdu.together.model.User" >
    <id column="uid" property="uid" jdbcType="INTEGER" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="sign" property="sign" jdbcType="VARCHAR" />
    <result column="sex" property="sex" jdbcType="INTEGER" />
    <result column="region" property="region" jdbcType="VARCHAR" />
    <result column="phone" property="phone" jdbcType="INTEGER" />
    <result column="wechat" property="wechat" jdbcType="VARCHAR" />
    <result column="qq" property="qq" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    uid, name, sign, sex, region, phone, wechat, qq
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from user
    where uid = #{uid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from user
    where uid = #{uid,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.qdu.together.model.User" >
    insert into user (uid, name, sign, 
      sex, region, phone, 
      wechat, qq)
    values (#{uid,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{sign,jdbcType=VARCHAR}, 
      #{sex,jdbcType=INTEGER}, #{region,jdbcType=VARCHAR}, #{phone,jdbcType=INTEGER}, 
      #{wechat,jdbcType=VARCHAR}, #{qq,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.qdu.together.model.User" >
    insert into user
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="uid != null" >
        uid,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="sign != null" >
        sign,
      </if>
      <if test="sex != null" >
        sex,
      </if>
      <if test="region != null" >
        region,
      </if>
      <if test="phone != null" >
        phone,
      </if>
      <if test="wechat != null" >
        wechat,
      </if>
      <if test="qq != null" >
        qq,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="uid != null" >
        #{uid,jdbcType=INTEGER},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="sign != null" >
        #{sign,jdbcType=VARCHAR},
      </if>
      <if test="sex != null" >
        #{sex,jdbcType=INTEGER},
      </if>
      <if test="region != null" >
        #{region,jdbcType=VARCHAR},
      </if>
      <if test="phone != null" >
        #{phone,jdbcType=INTEGER},
      </if>
      <if test="wechat != null" >
        #{wechat,jdbcType=VARCHAR},
      </if>
      <if test="qq != null" >
        #{qq,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.qdu.together.model.User" >
    update user
    <set >
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="sign != null" >
        sign = #{sign,jdbcType=VARCHAR},
      </if>
      <if test="sex != null" >
        sex = #{sex,jdbcType=INTEGER},
      </if>
      <if test="region != null" >
        region = #{region,jdbcType=VARCHAR},
      </if>
      <if test="phone != null" >
        phone = #{phone,jdbcType=INTEGER},
      </if>
      <if test="wechat != null" >
        wechat = #{wechat,jdbcType=VARCHAR},
      </if>
      <if test="qq != null" >
        qq = #{qq,jdbcType=INTEGER},
      </if>
    </set>
    where uid = #{uid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.qdu.together.model.User" >
    update user
    set name = #{name,jdbcType=VARCHAR},
      sign = #{sign,jdbcType=VARCHAR},
      sex = #{sex,jdbcType=INTEGER},
      region = #{region,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=INTEGER},
      wechat = #{wechat,jdbcType=VARCHAR},
      qq = #{qq,jdbcType=INTEGER}
    where uid = #{uid,jdbcType=INTEGER}
  </update>
</mapper>